name: Deploy to Production

on:
  push:
    branches:
      - main
    paths:
      - 'fashun-store/**'
      - '.github/workflows/deploy-production.yml'
  workflow_dispatch:

jobs:
  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./fashun-store
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: fashun-store/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true
      
      - name: Run TypeScript check
        run: npx tsc --noEmit
        continue-on-error: true
      
      - name: Run tests
        run: npm test -- --passWithNoTests
        continue-on-error: true

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint-and-test
    defaults:
      run:
        working-directory: ./fashun-store
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: fashun-store/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create production env file
        run: |
          echo "NEXT_PUBLIC_SITE_URL=${{ secrets.NEXT_PUBLIC_SITE_URL }}" >> .env.production
          echo "NEXT_PUBLIC_SHOPIFY_STORE_DOMAIN=${{ secrets.NEXT_PUBLIC_SHOPIFY_STORE_DOMAIN }}" >> .env.production
          echo "NEXT_PUBLIC_SHOPIFY_STOREFRONT_ACCESS_TOKEN=${{ secrets.NEXT_PUBLIC_SHOPIFY_STOREFRONT_ACCESS_TOKEN }}" >> .env.production
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" >> .env.production
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> .env.production
      
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            fashun-store/.next
            fashun-store/public
          retention-days: 7

  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ./fashun-store
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "Deployed to: $DEPLOYMENT_URL"
      
      - name: Comment deployment URL on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Deployed to: ${{ steps.deploy.outputs.deployment_url }}'
            })

  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    
    steps:
      - name: Notify success
        if: needs.deploy.result == 'success'
        run: |
          echo "Deployment successful!"
          curl -X POST ${{ secrets.N8N_WEBHOOK_URL }}/deployment-success \
            -H "Content-Type: application/json" \
            -d '{"status": "success", "environment": "production", "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"}'
      
      - name: Notify failure
        if: needs.deploy.result == 'failure'
        run: |
          echo "Deployment failed!"
          curl -X POST ${{ secrets.N8N_WEBHOOK_URL }}/deployment-failure \
            -H "Content-Type: application/json" \
            -d '{"status": "failure", "environment": "production", "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"}'

  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            https://fashun.co.in
            https://fashun.co.in/collections/all
            https://fashun.co.in/cart
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3
