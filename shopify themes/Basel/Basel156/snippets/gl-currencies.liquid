  {%- if settings.show_multiple_currencies -%}{{ "//cdn.shopify.com/s/javascripts/currencies.js" | script_tag }}{%- endif -%}
  {{ "jquery.currencies.min.js" | asset_url | script_tag }}
  {%- if settings.show_multiple_currencies -%}
  <script>

    // Pick your format here:
    // money_format or money_with_currency_format
    Currency.format = '{{ settings.currency_format | default: 'money_format' }}';

    var shopCurrency = '{{ shop.currency }}';

    /* Sometimes merchants change their shop currency, let's tell our JavaScript file */
    Currency.moneyFormats[shopCurrency].money_with_currency_format = {{ shop.money_with_currency_format | strip_html | json }};
    Currency.moneyFormats[shopCurrency].money_format = {{ shop.money_format | strip_html | json }};

    var cookieCurrency;
    try {cookieCurrency = gl_Currency.cookie.read();} catch (err) {}

    // Fix for customer account pages.
    jQuery('span.money span.money').each(function() {
      jQuery(this).parents('span.money').removeClass('money');
    });

    // Saving the current price.
    jQuery('span.money').each(function() {
      jQuery(this).attr('data-currency-{{ shop.currency }}', jQuery(this).html());
    });

      // Select all your currencies buttons.
      var buttons = jQuery('.currency li');

      // If there's no cookie or it's the shop currency.
      //console.log(cookieCurrency);
      if (cookieCurrency == null || cookieCurrency === shopCurrency) {
        buttons.removeClass('active');
        jQuery('.currency li[data-currency=' + shopCurrency + ']').addClass('active');
        Currency.currentCurrency = shopCurrency;
        jQuery(".current-currency").text(shopCurrency);
      }
      else {
        Currency.convertAll(shopCurrency, cookieCurrency);
        buttons.removeClass('active');
        jQuery('.currency li[data-currency=' + cookieCurrency + ']').addClass('active');
        jQuery(".current-currency").text(cookieCurrency);
      }

      // When customer clicks on a currency button.
      $(document).on("click",".currency li",function(ev) {
         ev.preventDefault();
        buttons.removeClass('active');
        var text_cur = jQuery(this).attr('data-currency');
        jQuery( ".currency li[data-currency='" + text_cur + "']" ).addClass('active');
        
        var newCurrency =  jQuery(this).attr('data-currency');
        if(newCurrency == Currency.currentCurrency)
        {
            Currency.convertAll(shopCurrency, newCurrency);
        }
        else
        {
            Currency.convertAll(Currency.currentCurrency, newCurrency);
        }
        
        jQuery(".current-currency").text(text_cur);
      });

      // For product options.
      var main_selectCallback = window.selectCallback;
      var selectCallback = function(variant, selector) {
          main_selectCallback(variant, selector);
          Currency.convertAll(shopCurrency, jQuery(".currency .active").attr('data-currency'));
      };
      Shopify.formatWithCurrency = function(amount){
        var price  = (isNaN(amount)) ? 0 : amount;
        var x = (gl_Currency.cookie.read() != null) ? gl_Currency.cookie.read() : shopCurrency;
        var c = (typeof Currency == 'undefined' ) ? "{%raw%}$ {{amount}}{%endraw%}": Currency.moneyFormats[x].money_format;
        return Shopify.formatMoney(price,c);
        };
        Shopify.convertWithCurrency = function(amount){
        var price  = (isNaN(amount)) ? 0 : amount;
        var x = (gl_Currency.cookie.read() != null) ? gl_Currency.cookie.read() : shopCurrency;
        //r c = (typeof Currency == 'undefined' ) ? '{%raw%}$ {{amount}}{%endraw%}' : Currency.moneyFormats[x].money_format;
        return Shopify.formatWithCurrency(Currency.convert(price,shopCurrency,x));
      }
  </script>
{%- endif -%}