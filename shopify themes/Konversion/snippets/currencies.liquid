{% if settings.show_multiple_currencies %}

{{ "//cdn.shopify.com/s/javascripts/currencies.js" | script_tag }}
{{ "jquery.currencies.min.js" | asset_url | script_tag }}

<script>
Currency.format = '{{ settings.currency_format | default: 'money_with_currency_format' }}';
var shopCurrency = '{{ shop.currency }}';
/* Sometimes merchants change their shop currency, let's tell our JavaScript file */
Currency.moneyFormats[shopCurrency].money_with_currency_format = {{ shop.money_with_currency_format | strip_html | json }};
Currency.moneyFormats[shopCurrency].money_format = {{ shop.money_format | strip_html | json }};

/* Remove currency code from compare_at_price */
Currency.afterPriceCurrencyUpdated = function(newCurrency) {
  jQuery('.product-price__old .money').each(function(idx, el){
    $(el).text($(el).text().replace(' ' + newCurrency, ''));
  });
  // Update currency in product-card dropdown options
  $(".product-card__form").each(function(index, formEl){
    var $pricesRef = $(formEl).find(".variant-prices-ref");
    if ($pricesRef.length > 0) {
      // Update text of the native select
      $(formEl).find(".product-form__variants option:not(:disabled)").each(function(idx, el){
        try {
          var optionPieces = $(el).text().split("-"),
            pricePiece = optionPieces[optionPieces.length-1],
            variantId = $(el).val(),
            inCurrency = $pricesRef.find("[data-variant-id=" + variantId + "] span").text(),
            newText = $(el).text().replace(pricePiece, inCurrency).trim();
          $(el).text(" " + newText);
          var selectricEl = $(formEl).find(".selectric-items li.money").get(idx);
          if (selectricEl) {
            $(selectricEl).text(newText);
          }
        } catch(e) {
          console.warn("Couldn't update currency for: " + $(el).text().trim() + " (" + e.message + ")");
        }
      });
    }
  });
  // Use <span data-current-currency>USD<\/span>
  // and it will be replaced with appropriate currency
  $('span[data-current-currency]').each(function(idx, el){
    $(el).text(newCurrency);
  });
}


/* Default currency */
var defaultCurrency = '{{ settings.default_currency | default: shop.currency }}';

/* Cookie currency */
var cookieCurrency = Currency.cookie.read();
/* Fix for customer account pages */
jQuery('span.money span.money').each(function() {
  jQuery(this).parents('span.money').removeClass('money');
});
/* Saving the current price */
jQuery('span.money').each(function() {
  jQuery(this).attr('data-currency-{{ shop.currency }}', jQuery(this).html());
});
// If there's no cookie.
if (cookieCurrency == null) {
  if (shopCurrency !== defaultCurrency) {
    Currency.convertAll(shopCurrency, defaultCurrency);
    Currency.afterPriceCurrencyUpdated(defaultCurrency);
  }
  else {
    Currency.currentCurrency = defaultCurrency;
  }
}
// If the cookie value does not correspond to any value in the currency dropdown.
else if (jQuery('[name=currencies]').size() && jQuery('[name=currencies] option[value=' + cookieCurrency + ']').size() === 0) {
  Currency.currentCurrency = shopCurrency;
  Currency.cookie.write(shopCurrency);
}
else if (cookieCurrency === shopCurrency) {
  Currency.currentCurrency = shopCurrency;
}
else {
  Currency.convertAll(shopCurrency, cookieCurrency);
  Currency.afterPriceCurrencyUpdated(cookieCurrency);
}
jQuery('[name=currencies]').val(Currency.currentCurrency).change(function() {
  var newCurrency = jQuery(this).val();
  Currency.convertAll(Currency.currentCurrency, newCurrency);
  Currency.afterPriceCurrencyUpdated(newCurrency);
  jQuery('.selected-currency').text(Currency.currentCurrency);
});
var original_selectCallback = window.selectCallback;
var selectCallback = function(variant, selector) {
  original_selectCallback(variant, selector);
  Currency.convertAll(shopCurrency, jQuery('[name=currencies]').val());
  Currency.afterPriceCurrencyUpdated(jQuery('[name=currencies]').val());
  jQuery('.selected-currency').text(Currency.currentCurrency);
};
$('body').on('afterCartLoad.ajaxCart', function(cart) {
  Currency.convertAll(shopCurrency, jQuery('[name=currencies]').val());
  Currency.afterPriceCurrencyUpdated(jQuery('[name=currencies]').val());
  jQuery('.selected-currency').text(Currency.currentCurrency);  
});
jQuery('.selected-currency').text(Currency.currentCurrency);
</script>

{% endif %}