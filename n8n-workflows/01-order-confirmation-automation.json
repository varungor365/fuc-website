{
  "name": "FASHUN - Order Confirmation & Automation",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "razorpay-webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-razorpay",
      "name": "Razorpay Payment Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300],
      "webhookId": "razorpay-payment-success"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"event\"]}}",
              "value2": "payment.captured"
            }
          ]
        }
      },
      "id": "check-payment-status",
      "name": "Check Payment Success",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "url": "={{$env.SUPABASE_URL}}/rest/v1/orders",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "supabaseApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "payment_id",
              "value": "={{$json[\"payload\"][\"payment\"][\"entity\"][\"id\"]}}"
            },
            {
              "name": "order_id",
              "value": "={{$json[\"payload\"][\"payment\"][\"entity\"][\"order_id\"]}}"
            },
            {
              "name": "amount",
              "value": "={{$json[\"payload\"][\"payment\"][\"entity\"][\"amount\"] / 100}}"
            },
            {
              "name": "status",
              "value": "confirmed"
            },
            {
              "name": "payment_method",
              "value": "={{$json[\"payload\"][\"payment\"][\"entity\"][\"method\"]}}"
            },
            {
              "name": "customer_email",
              "value": "={{$json[\"payload\"][\"payment\"][\"entity\"][\"email\"]}}"
            },
            {
              "name": "customer_phone",
              "value": "={{$json[\"payload\"][\"payment\"][\"entity\"][\"contact\"]}}"
            },
            {
              "name": "created_at",
              "value": "={{new Date().toISOString()}}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "update-order-supabase",
      "name": "Update Order in Supabase",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [650, 200]
    },
    {
      "parameters": {
        "url": "={{$env.SUPABASE_URL}}/rest/v1/products?id=eq.{{$json[\"product_id\"]}}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "supabaseApi",
        "method": "PATCH",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "inventory",
              "value": "={{$json[\"inventory\"] - $json[\"quantity\"]}}"
            }
          ]
        }
      },
      "id": "decrement-inventory",
      "name": "Decrement Inventory",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [650, 400]
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "resource": "message",
        "operation": "send",
        "to": "={{$json[\"customer_email\"]}}",
        "subject": "Order Confirmed! üéâ - FASHUN Order #{{$json[\"order_id\"]}}",
        "emailType": "html",
        "message": "=<html>\n<head>\n  <style>\n    body { font-family: 'Montserrat', Arial, sans-serif; background: #000; color: #fff; }\n    .container { max-width: 600px; margin: 0 auto; padding: 40px 20px; }\n    .header { text-align: center; margin-bottom: 40px; }\n    .logo { font-size: 32px; font-weight: 900; background: linear-gradient(135deg, #FF6B35 0%, #F7931E 100%); -webkit-background-clip: text; -webkit-text-fill-color: transparent; }\n    .order-box { background: rgba(255,255,255,0.05); border: 1px solid rgba(255,255,255,0.1); border-radius: 16px; padding: 30px; margin: 20px 0; }\n    .btn { background: linear-gradient(135deg, #FF6B35 0%, #F7931E 100%); color: #fff; padding: 15px 40px; border-radius: 12px; text-decoration: none; display: inline-block; font-weight: bold; }\n    .footer { text-align: center; color: #666; margin-top: 40px; font-size: 12px; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <div class=\"logo\">FASHUN</div>\n      <h1>Order Confirmed! üéâ</h1>\n    </div>\n    \n    <div class=\"order-box\">\n      <h2>Order #{{$json[\"order_id\"]}}</h2>\n      <p><strong>Amount Paid:</strong> ‚Çπ{{$json[\"amount\"]}}</p>\n      <p><strong>Payment Method:</strong> {{$json[\"payment_method\"]}}</p>\n      <p><strong>Status:</strong> <span style=\"color: #4ade80;\">Confirmed & Processing</span></p>\n    </div>\n    \n    <p>Hey there! üëã</p>\n    <p>Your order has been confirmed and we're getting it ready for you! Your streetwear is about to level up. üî•</p>\n    \n    <p><strong>What's Next?</strong></p>\n    <ul>\n      <li>üì¶ We'll pack your order with care</li>\n      <li>üöö You'll receive shipping updates via WhatsApp</li>\n      <li>‚ú® Expect delivery in 3-5 business days</li>\n    </ul>\n    \n    <div style=\"text-align: center; margin: 40px 0;\">\n      <a href=\"https://fashun.co.in/orders/{{$json[\"order_id\"]}}\" class=\"btn\">Track Your Order</a>\n    </div>\n    \n    <div class=\"footer\">\n      <p>Questions? Reply to this email or WhatsApp us at +91-XXXXXXXXXX</p>\n      <p>FASHUN - Bold. Unapologetic. You.</p>\n      <p>¬© 2025 FASHUN. All rights reserved.</p>\n    </div>\n  </div>\n</body>\n</html>",
        "options": {}
      },
      "id": "send-confirmation-email",
      "name": "Send Confirmation Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2,
      "position": [850, 100]
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "send",
        "from": "whatsapp:{{$env.TWILIO_WHATSAPP_NUMBER}}",
        "to": "whatsapp:{{$json[\"customer_phone\"]}}",
        "message": "=üéâ *Order Confirmed!*\n\nHey! Your FASHUN order #{{$json[\"order_id\"]}} is confirmed!\n\nüí∞ *Amount:* ‚Çπ{{$json[\"amount\"]}}\nüì¶ *Status:* Processing\nüöö *Delivery:* 3-5 business days\n\nTrack your order: https://fashun.co.in/orders/{{$json[\"order_id\"]}}\n\n*FASHUN* - Bold. Unapologetic. You. üî•",
        "options": {}
      },
      "id": "send-whatsapp-notification",
      "name": "Send WhatsApp Notification",
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [850, 300]
    },
    {
      "parameters": {
        "chatId": "={{$env.TELEGRAM_ADMIN_CHAT_ID}}",
        "text": "=üõçÔ∏è *NEW ORDER RECEIVED*\n\n*Order ID:* {{$json[\"order_id\"]}}\n*Amount:* ‚Çπ{{$json[\"amount\"]}}\n*Customer:* {{$json[\"customer_email\"]}}\n*Payment:* {{$json[\"payment_method\"]}}\n*Time:* {{new Date().toLocaleString('en-IN', {timeZone: 'Asia/Kolkata'})}}\n\n[View Order](https://fashun.co.in/admin/orders/{{$json[\"order_id\"]}})",
        "additionalFields": {
          "parseMode": "Markdown"
        }
      },
      "id": "notify-admin-telegram",
      "name": "Notify Admin (Telegram)",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [850, 500]
    },
    {
      "parameters": {
        "url": "={{$env.STRAPI_API_URL}}/api/admin-activity",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "strapiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$env.STRAPI_API_TOKEN}}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "action",
              "value": "ORDER_CONFIRMED"
            },
            {
              "name": "resource",
              "value": "order"
            },
            {
              "name": "resourceId",
              "value": "={{$json[\"order_id\"]}}"
            },
            {
              "name": "amount",
              "value": "={{$json[\"amount\"]}}"
            },
            {
              "name": "timestamp",
              "value": "={{new Date().toISOString()}}"
            }
          ]
        }
      },
      "id": "log-activity",
      "name": "Log Activity to Strapi",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [1050, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ {\"success\": true, \"message\": \"Order processed successfully\"} }}",
        "options": {}
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1250, 300]
    }
  ],
  "connections": {
    "Razorpay Payment Webhook": {
      "main": [
        [
          {
            "node": "Check Payment Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Payment Success": {
      "main": [
        [
          {
            "node": "Update Order in Supabase",
            "type": "main",
            "index": 0
          },
          {
            "node": "Decrement Inventory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Order in Supabase": {
      "main": [
        [
          {
            "node": "Send Confirmation Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Decrement Inventory": {
      "main": [
        [
          {
            "node": "Send WhatsApp Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Confirmation Email": {
      "main": [
        [
          {
            "node": "Log Activity to Strapi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send WhatsApp Notification": {
      "main": [
        [
          {
            "node": "Notify Admin (Telegram)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notify Admin (Telegram)": {
      "main": [
        [
          {
            "node": "Log Activity to Strapi",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Activity to Strapi": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-11-01T00:00:00.000Z",
  "versionId": "1"
}
